<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!--
    scan:当此属性设置为true时，配置文档如果发生改变，将会被重新加载，默认值为true。
    scanPeriod:设置监测配置文档是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
                 当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration  scan="true" scanPeriod="10 seconds" debug="false">
    <!--每个logger都关联到logger上下文，默认上下文名称为“default”。但可以使用contextName>置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。-->
    <contextName>springcloud-client</contextName>

    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义后，可以使“${}”来使用变量。 -->
    <property name="logging.path" value="D:/logback-spring/mylogs" />

    <property name="Rolling_File_Appender_Pattern" value="%d{yyyy-MM-dd.HH:mm:ss.SSS} [%-16t][%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}] %-5p %-22c{0} %X{ServiceId} - %m%n"/>


    <!-- 一个appender子元素定义一个日志输出目的地 -->
    <!-- 输出到文档-->
    <appender name="Rolling_File_Appender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文档的路径及文档名 -->
        <file>${logging.path}/springcloud-client.log</file>
        <!--日志文档输出格式-->
        <encoder>
            <pattern>${Rolling_File_Appender_Pattern}</pattern>
            <charset>UTF-8</charset> <!-- 设置字符集 -->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${logging.path}/web-debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文档保留天数-->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
    </appender>

    

    <!--
        <logger>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。
        <logger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。
        name:用来指定受此logger约束的某一个包或者具体的某一个类。
        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
              还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别（root节点的级别）。
              如果未设置此属性，那么当前logger将会继承上级（root节点）的级别。
        addtivity:是否向上级logger传递打印信息。默认是true。
    -->
    <logger name="com.xjw.springcloudclient" additivity="false">
        <appender-ref ref="Rolling_File_Appender" />
    </logger>
	<logger name="org.mybatis" additivity="false">
        <appender-ref ref="Rolling_File_Appender" />
    </logger>



    <!--
        root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性
        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
        不能设置为INHERITED或者同义词NULL。默认是DEBUG
        可以包含零个或多个元素，标识这个appender将会添加到这个logger。
    -->
    <root level="info">
        <appender-ref ref="Rolling_File_Appender" />
    </root>

</configuration>